CREATE DATABASE ADMINISCAR;

USE ADMINISCAR;

DROP DATABASE ADMINISCAR;

/* O SISTEMA TERÁ UMA CONTA ADMINISTRATIVA PADRÃO PARA INICIALIZAR, SÃO 3 NIVEIS DE ACESSO:
NÍVEL 1; CLIENTE, NÍVEL 2; FUNCINÁRIO COMUM E NÍVEL 3; GERENTE E ADMINISTRADOR.*/

CREATE TABLE LOGIN(
COD_USUARIO INT PRIMARY KEY AUTO_INCREMENT,
USUARIO VARCHAR(50), 
SENHA VARCHAR(10),
NIVEL_ACESSO INT,
CHECK(NIVEL_ACESSO >= 1 AND NIVEL_ACESSO <= 3) -- LIMITA DE 1 A 3
);

SELECT * FROM LOGIN;

-- CONTA INICIAL PARA DAR BOOT NO SISTEMA
INSERT INTO LOGIN VALUES(DEFAULT, 'ADMINISTRADOR', '12345678', '3');

-- AQUI FICAM TODOS OS FUNCIONÁRIOS DA LOCADORA, INCLUSIVE OS GERENTES E DIRETORES
CREATE TABLE FUNCIONARIO(
COD_FUN INT PRIMARY KEY AUTO_INCREMENT,
COD_USUARIO INT, FOREIGN KEY(COD_USUARIO) REFERENCES LOGIN(COD_USUARIO),
NOME_FUN VARCHAR(100),
CARGO_FUN VARCHAR(50), -- QUALQUER CARGO DESDE FAXINEIRO ATÉ DIRETOR
CPF_FUN VARCHAR(20),
CNH_FUN VARCHAR(15),
TEL_FUN VARCHAR(15),
EMAIL_FUN VARCHAR(100)
);

CREATE TABLE CLIENTE(
COD_CLI INT PRIMARY KEY AUTO_INCREMENT,
COD_USUARIO INT, FOREIGN KEY(COD_USUARIO) REFERENCES LOGIN(COD_USUARIO),
NOME_CLI VARCHAR(100),
CPF_CNPJ_CLI VARCHAR(20), -- COM VARCHAR O BANCO FICA MAIS VERSATIVEL E COM MENOS CHANCE DE ERROS, NO SISTEMA ASP.NET E ANDROID SERÁ FEITA UMA MÁSCARA PARA TRATAR ESSE CAMPO.
CNH_CLI VARCHAR (15),
TEL_CLI VARCHAR(15),
EMAIL_CLI VARCHAR(100)
);

CREATE TABLE CARRO(
COD_CARRO INT PRIMARY KEY AUTO_INCREMENT,
MODELO VARCHAR(20), -- EXEMPLO: CORSA
MARCA VARCHAR(20), -- EXEMPLO: CHEVROLET
ANO VARCHAR(4), 
COR VARCHAR(30),
PLACA VARCHAR(10), -- EXEMPLO: DUB-8794
RENAVAM VARCHAR (15),
PORTAS INT(1), -- 2/4
TRANSMISSAO VARCHAR(20), -- MANUAL/AUTOMATICA
MOTOR VARCHAR(3), -- EXEMPLO: 1.8
TIPO_CARROCERIA VARCHAR(15), -- SEDÃ/HATCH/COUPE/CONVERSIVEL/PICAPE/JIPE/SUV/UTILITARIO
CATEGORIA VARCHAR(20), -- ECONOMICA/INTERMEDIARIA/LUXO
COMBUSTIVEL VARCHAR(20), -- GASOLINA/ALCOOL/DIESEL/FLEX/GNV
QUILOMETRAGEM INT,
SITUACAO VARCHAR (20), -- DISPONIVEL/INDISPONIVEL
VALOR_DIARIO DECIMAL(10,2) -- PARA CÁLCULOS ENVOLVENDO DINHEIRO ESSE É O MELHOR TIPO DE DADOS
);

-- TABELA SÓ PARA ENDEREÇOS POIS SÃO DADOS MULTIVALORADOS 
CREATE TABLE ENDERECO(
COD_END INT PRIMARY KEY AUTO_INCREMENT,
COD_CLI INT, FOREIGN KEY(COD_CLI) REFERENCES CLIENTE(COD_CLI),
COD_FUN INT, FOREIGN KEY(COD_FUN) REFERENCES FUNCIONARIO(COD_FUN),
LOGRADOURO VARCHAR(100), -- RUA/AVENIDA/TRAVESSA/VIELA/PRAÇA
NUMERO INT,
COMPLEMENTO VARCHAR(30), -- APARTAMENTO/SALA/CONJUNTO/EDIFICIO/ANDAR
BAIRRO VARCHAR(50),
CIDADE VARCHAR(50),
UF CHAR(2), -- SIGLA ESTADO
CEP VARCHAR(8)
);

CREATE TABLE PAGAMENTO(
COD_PAGAMENTO INT PRIMARY KEY,
TIPO_PAGAMENTO VARCHAR(30) -- DINHEIRO; BOLETO; TRANSFERENCIA; CREDITO; DEBITO E PIX.
);

/* AQUI OS ITEMS FICAM ARMAZENADOS NO CARRINHO ATÉ QUE O PEDIDO SEJA CONCLUÍDO OU O USUÁRIO OS EXCLUA, NO CASO DE O PEDIDO SER CONCLUÍDO É 
ACIONADA UMA TRIGGER QUE EXCLUI OS ITENS QUE ESTAVAM AQUI, DETALHE É QUE OS ITENS FICAM NO CARRINHO MESMO QUE O USUÁRIO SAIA DO SISTEMA(LOGOUT)*/
CREATE TABLE CARRINHO(-- CARRINHO VIRTUAL--CARRINHO VIRTUAL
COD_CARRINHO INT PRIMARY KEY AUTO_INCREMENT,
COD_CARRO INT, FOREIGN KEY(COD_CARRO) REFERENCES CARRO(COD_CARRO),
QTD_CARROS INT, -- CONFORME O CLIENTE ADICIONA CARROS, O SISTEMA VAI SOMANDO A QUANTIDADE NESTE CAMPO
QTD_DIAS INT,-- TAMBÉM É POSSIVEL SIMULAR O VALOR DO ALUGUEL ANTES DE CONCLUIR A LOCAÇÃO (VALOR_DIARIO (TABELA CARRO)* QTD_DIAS), O SISTEMA FARÁ O CÁLCULO.
VLTOTAL_ITENS DECIMAL(10,2) -- PARA CÁLCULOS ENVOLVENDO DINHEIRO ESSE É O MELHOR TIPO DE DADOS
);
-- CONFORME É ADICIONADO MAIS CARROS AO CARRINHO O SISTEMA RECALCULA O CAMPO (VLTOTAL_ITENS) CONFORME AS ESCOLHAS DO USUÁRIO

-- AQUI BEM NO MEIO, TERÁ UM BOTÃO NO SISTEMA (FAZER PEDIDO) QUE IRÁ TRANSFERIR OS DADOS DA TABELA (CARRINHO) PARA A TABELA (PEDIDO)

-- OPERACAO FINAL DE LOCAÇÃO DO CARRO.
CREATE TABLE PEDIDO(
COD_PEDIDO INT PRIMARY KEY AUTO_INCREMENT,
COD_CARRINHO INT, FOREIGN KEY(COD_CARRINHO) REFERENCES CARRINHO(COD_CARRINHO), -- FOREIGN KEY NECESSÁRIA PARA A TRIGGER QUE IRÁ DELETAR ->
-- OS ITENS DO CARRINHO APÓS O CLIENTE FAZER O PEDIDO.
STATUS_PEDIDO VARCHAR(30), -- PENDENTE/APROVADO/EM ANDAMENTO/CONCLUÍDO/CANCELADO
COD_CLI INT, FOREIGN KEY(COD_CLI) REFERENCES CLIENTE(COD_CLI),
COD_FUN INT, FOREIGN KEY(COD_FUN) REFERENCES FUNCIONARIO(COD_FUN), -- SÓ SERÁ PREENCHIDO SE FOR O FUNCIONARIO QUE FIZER O PEDIDO PARA O CLIENTE
COD_CARRO INT, FOREIGN KEY(COD_CARRO) REFERENCES CARRO(COD_CARRO),-- PREENCIMENTO AUTOMATICO PELO SISTEMA, VAI PEGAR DA TABELA CARRINHO
QTD_CARROS INT, -- PREENCIMENTO AUTOMATICO PELO SISTEMA, VAI PEGAR DA TABELA CARRINHO  ATRAVÉS DE UMA TRIGGER.
QTD_DIAS INT, -- PREENCIMENTO AUTOMATICO PELO SISTEMA, VAI PEGAR DA TABELA CARRINHO
DATA_RETIRADA VARCHAR(10), -- APÓS O CLIENTE RETIRAR O CARRO O STATUS DO PEDIDO MUDA PARA "EM ANDAMENTO"
DATA_DEVOLUCAO VARCHAR(10), -- APÓS O CLIENTE DEVOLVER O CARRO O STATUS DO PEDIDO MUDA PARA "CONCLUIDO"
COD_PAGAMENTO INT, FOREIGN KEY(COD_PAGAMENTO) REFERENCES PAGAMENTO(COD_PAGAMENTO), -- DO 1 AO 6, APOS A CONFIRMAÇAO DO PAGAMENTO O STATUS DO PEDIDO MUDA PARA "APROVADO".
VLTOTAL_FINAL DECIMAL(10,2), -- COMO O CÁLCULO JÁ FOI FEITO NO CARRINHO, ELE SÓ VAI PEGAR DA TABELA CARRINHO O CAMPO: VLTOTAL_ITENS E JOGAR AQUI.
DATA_PEDIDO TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);


